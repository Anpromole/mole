#include <cstdio>
#include <algorithm>
using namespace std;
struct student
{
	int id;
	int grade[4];//A,C,M,E
} stu[2010];
int Rank[1000000][4] = { 0 };
int now;
bool cmp(student a, student b) {
	return a.grade[now] > b.grade[now];
}
int main()
{
	int n, m;
	int id, grade[4];
	char a[4] = { 'A','C','M','E' };
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; i++) {
		scanf("%d", &id);
		stu[i].id = id;
		for (int j = 1; j <= 3; j++) {
			scanf("%d", &stu[i].grade[j]);
		}
		stu[i].grade[0] = stu[i].grade[1] + stu[i].grade[2] + stu[i].grade[3];
	}
	for ( now = 0; now < 4; now++) {
		sort(stu, stu + n, cmp);
		Rank[stu[0].id][now] = 1;
		for (int j = 1; j < n; j++) {
			if (stu[j].grade[now] == stu[j - 1].grade[now]) {
				Rank[stu[j].id][now] = Rank[stu[j - 1].id][now];
			}
			else {
				Rank[stu[j].id][now] = j+1;
			}
		}
	}
	int query;
	for (int i = 0; i < m; i++) {
		scanf("%d", &query);
		if (Rank[query][0] == 0) {
			printf("N/A\n");
		}
		else {
			int index = 0;
			int	min=Rank[query][0];
			for (int j = 1; j < 4; j++) {
				if (min > Rank[query][j]) {
					index = j;
					min = Rank[query][j];
				}
			}
			printf("%d %c\n", min, a[index]);
		}
	}
	return 0;
		
}
