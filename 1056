#include <cstdio>
#include <queue>
#include <algorithm>
using namespace std;
const int maxn = 1010;
struct mouse {
	int weight;
	int rank;
}mouse[maxn];
int main() {
	int np, ng ,group;
	scanf("%d%d", &np, &ng);
	for (int i = 0; i < np; i++) {
		scanf("%d", &mouse[i].weight);
	}
	queue<int> a;
	for (int i = 0; i < np; i++) {
		int temp;
		scanf("%d", &temp);
		a.push(temp);
	}
	int temp = np;
	while (a.size() != 1) {
		if (temp % ng == 0) {
			group = temp / ng;
		}
		else {
			group = temp / ng + 1;
		}
		for (int i = 0; i < group; i++) {
			int k = a.front();//存该组最重的编号
			for (int j = 0; j < ng; j++) {
				if (i * ng + j >= temp) break;//很重要的思路，解决了当最后一组有可能数量不够出现的问题，好好看
				int front = a.front();
				if (mouse[front].weight > mouse[k].weight) {
					k = front;
				}
				mouse[front].rank = group + 1;
				a.pop();
			}
			a.push(k);
		}
		temp = group;
	}
	mouse[a.front()].rank = 1;
	for (int i = 0; i < np; i++) {
		printf("%d", mouse[i].rank);
		if (i < np - 1) printf(" ");
	}
	return 0;
}
